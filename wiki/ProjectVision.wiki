#labels Phase-Requirements
Open source tool for ATE Data Analysis

= Introduction =

On [http://www.linkedin.com LinkedIn] a discussion was started by [http://www.linkedin.com/profile?viewProfile=&key=6587116&authToken=JB9j&authType=name&goback=%2Eanh_941397 Aparna Joshi] with the title "[http://www.linkedin.com/groupAnswers?viewQuestionAndAnswers=&gid=941397&discussionID=18344633&goback=%2Eanh_941397 Why do we need data files in STDF (Standard Test Data Format)?]" 

The consensus is that although STDF is far from perfect, the good thing about it is that it is a *standard*. For any data manipulating tools to be used widely they *MUST* be based on a standard.

There are many good tools available on the commercial market, but none in the open source domain. As the prices for the nice commercial tools are high (or at least perceived as such) the existence of STDF itself is put in question over and over again (that's why the above discussion was started). This in turn doesn't help STDF to evolve, whereas there is clearly still room to do so.

This project attempts to get an open source effort up and running that will enable people to manipulate ATE LOG files in general, and STDF files in an inter-active way for *INVESTIGATION* purposes. It is *NOT* an attempt to compete with commercial tools!

= Details =

== Programming Language ==

A long discussion can be made on what programming language to use, and in fact each language has advantages and disadvantages for the task at hand, so if we make for a minute abstraction of the language and ask ourselves what it is that we want to do, then the answer is :

   * Load some ATE data file into memory (STDF/WAT/GDF/CSV/...)
   * Extract data (summary, test list, ...)
   * Transform data (discard dies with bincode X, PAT, ...)
   * Calculate correlations
   * Create graphs (trend, distributions, XY scatters, ...)
   * Write data to file in some format (STDF/WAT/InkMap/CSV/XLS/...)
   * Create a report 

So, if we implement this project just by "choosing" a programming language, the project will fail, because :

   #. It means that the user needs to be very familiar with the chosen programming language
   #. Every single thing needs to be coded by the project itself




netbeans
 